@using PC_Components_Shop.Models
@using PagedList.Mvc
@using PagedList

@model IPagedList<Product>

@{
    ViewBag.Title = "Home Page";
}

<main>
    <div class="row justify-content-end mt-5">
        <div class="col-3">
            @using (Html.BeginForm("Index", "Home", FormMethod.Get))
            {
                <input type="text" name="filterCriteria" placeholder="Search by product name..." />
                <input type="submit" name="submit" value="Search" />
            }
        </div>
        <div class="col-3">
            <form method="get">
                <p>
                    <select name="sortByPrice" onchange="this.form.submit()">
                        <option value="default" @( ViewBag.CurrentSort == "default" ? "selected" : "")>Sort by price</option>
                        <option value="standardPrice_asc" @( ViewBag.CurrentSort == "standardPrice_asc" ? "selected" : "")>Price (Min - Max)</option>
                        <option value="standardPrice_desc" @(ViewBag.CurrentSort == "standardPrice_desc" ? "selected" : "")>Price (Max - Min)</option>
                    </select>
                </p>
            </form>
        </div>
    </div>
    <div class="row">
        @if (Model.Count == 0)
        {
            <div class="col-12">
                <h5 class="text-danger">No products found! Try searching something else!</h5>
            </div>

        }
        @foreach (var prod in Model)
        {
            <div class="col-lg-3">
                <div class="card border border-light border-2" style="margin: 2rem 1rem 2rem 1rem; background-color: #F3FF90 ">
                    <img class="card-img-top" src="" alt="" width="200" height="200" />
                    <div class="card-body">
                        <h5 class="card-title">@Html.DisplayFor(modelProduct => prod.ProductName)</h5>
                        <p class="card-text">
                            @Html.DisplayFor(modelProduct => prod.ProductDescription)
                        </p>
                        <p>
                            <span class="text-black">Price: @Html.DisplayFor(modelProduct => prod.StandardPrice)</span>
                        </p>
                        <p>
                            <a class="btn btn-primary" href="">Details</a>
                        </p>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row">
        <div class="col-12 mt-5 mb-5">
            @Html.PagedListPager(Model, page => Url.Action("Index", "Home", new { page, filterCriteria = Request.QueryString["filterCriteria"], sortByPrice = ViewBag.PriceSortParm }), new PagedListRenderOptions
       {
           UlElementClasses = new[] { "pagination pagination-md" },
           LiElementClasses = new[] { "page-item" }
       })
        </div>
    </div>
</main>